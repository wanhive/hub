###############################################################################
#Configuration file for Wanhive Hub                                          ##
#These characters start a comment:  '#' ';'                                  ##
#Only ASCII printable characters are supported                               ##
#The maximum line length is 255 characters                                   ##
#The maximum section length is 63 characters (excluding the braces)          ##
#Section name can include [A-Za-z0-9]                                        ##
#The maximum key length is 31 characters                                     ##
#The maximum value length is 223 characters                                  ##
#Multiline entries not supported                                             ##
#Supported data types: Unsigned integer, Double, String, Boolean             ##
###############################################################################

[PATHS]
#Define all the macros under this section
BASEDIR = ~/.config/wanhive

[OPT]
#Define optional/experimental features under this section
#Mask sensitive data in message logs (default: true)
#secureLog = false

[KEYS]
#Private key for authentication
#privateKey = $BASEDIR/keys/hk.pem
#Public key for authentication
#publicKey = $BASEDIR/keys/pk.pem
#Enable host verification (not required if SSL/TLS is enabled)
#verifyHost = TRUE

[SSL]
#Enable or disable SSL/TLS
#enable = TRUE
#Trusted certificates (PEM format)
#trust = $BASEDIR/ssl/rootCA.crt
#SERVER: The certificate file (PEM format)
#certificate = $BASEDIR/ssl/wh.crt
#SERVER: The private key file (PEM format)
#key = $BASEDIR/ssl/wh.key

[HOSTS]
#SQLite3 database of the known hosts
#hostsDb = $BASEDIR/hosts.db
#A text file containing the list of the known hosts
hostsFile = $BASEDIR/hosts

[BOOTSTRAP]
#A text file containing the list of stable overlay hub identifiers
nodes = $BASEDIR/nodes
#A text file containing the list of stable authentication hub identifiers
auths = $BASEDIR/auths

[HUB]
#Listen for incoming connections
listen = YES
#Listener Backlog
backlog = 2
#Listener will bind to this address
#serviceName = /home/user/wh0uds
#Options: unix/inet, defaults to inet
#serviceType = unix
#The maximum number of connections
connectionPoolSize = 32
#The maximum number of messages
messagePoolSize = 4096
#The maximum number of IO events in an event loop
maxIOEvents = 32
#Initial expiration of the internal timer in milliseconds (0 = disable)
#timerExpiration = 100
#Periodic expiration of the internal timer in milliseconds
#timerInterval = 2000
#Event notifier acts like a semaphore (default: 8-byte counter)
#semaphore = YES
#Enable synchronous signal handling (if in doubt, keep disabled)
#signal = YES
#The maximum number of new/temporary connections
maxNewConnnections = 4
#New/temporary connections timeout in milliseconds
connectionTimeOut = 2000
#The maximum number of messages to read from each connection in an event loop
cycleInputLimit = 16
#The maximum number of outgoing messages in a connection's queue (0 = no limit)
#outputQueueLimit = 32
#Throttle incoming messages
throttle = YES
#Messages reserved for internal use
#reservedMessages = 8
#Enable congestion control
allowPacketDrop = YES
#Per-message TTL (time to live) counter
messageTTL = 128
#Capacity reservation ratios (Constraint: 2*answerRatio + forwardRatio <= 1)
#answerRatio = 0.15
#forwardRatio = 0.70
#Verbosity of logs (DEBUG=7;INFO=6;NOTICE=5;WARNING=4;ERROR=3;CRITICAL=2;ALERT=1;EMERGENCY=0)
#verbosity = 7

[OVERLAY]
#Allow registration
enableRegistration = YES
#Authenticate the registration requests from the clients
#authenticateClient = YES
#Join an overlay network
#connectToOverlay = YES
#Frequency of the periodic overlay maintenance cycle in milliseconds
#updateCycle = 2000
#Blocking I/O timeout for the overlay maintenance in milliseconds
#timeOut = 3000
#Wait period before retry in milliseconds (after a stabilization error)
#retryInterval = 5000
#Netmask for the domain based access control
#netMask = 0xfffffffffffffc00
#The group identifier
#groupId = 16

[AUTH]
#Postgresql server connection info
;REF: PQconnectdb parameter keywords in the libpq documentation
;Parameter setting in the form keyword=value
;Surround a null value or a value containing spaces with single quotes, e.g., keyword = 'a value'
;Single quotes within the value must be written as \'
;Commonly used keys: host, hostaddr, port, dbname, user, password, options, tty
#connInfo = user=postgres dbname=postgres
#Accept UID as the query parameter and return the tuple (UID, SALT, VERIFIER, TYPE)
#query = select uid,salt,verifier,type from wh_thing where uid=$1 and domainuid in (select wh_domain.uid from wh_domain,wh_user where wh_user.uid=wh_domain.useruid and wh_user.status=1)
#For obfuscation of the failed identification requests
#salt = helloworld

[CLIENT]
#Cleartext password for authentication
#password = password123
#Password hashing rounds, recommended value: [5000-500000]
#passwordHashRounds = 1
#Communication timeout (during bootstrapping)
#timeOut = 3000
#Wait period before retry in milliseconds (after a connection failure)
#retryInterval = 5000

###############################################################################
#Configurations for the extensions follow:                                   ##
###############################################################################
